// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

package frc.robot.commands;
import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.CommandBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.driveSubsystem;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class gyroTurnRight extends CommandBase {
    private final driveSubsystem m_driveSubsystem;
 
    double speed;

    double initialAngle;
    double currentAngle;
    double goalAngle;


    public gyroTurnRight(driveSubsystem subsystem, double goalAngle) {
        m_driveSubsystem = subsystem;
        addRequirements(m_driveSubsystem);

        this.goalAngle = goalAngle;
    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
        speed = Preferences.getDouble("Gyro Turn Speed", 0.1);
        initialAngle = driveSubsystem.readHeading();
    }

    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
        currentAngle = driveSubsystem.readHeading();
        SmartDashboard.putNumber("Gyro Angle", currentAngle);

        driveSubsystem.driveTrain.driveCartesian(0, 0, speed);
    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
        driveSubsystem.driveTrain.driveCartesian(0, 0, 0);
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return currentAngle >= (initialAngle + goalAngle);
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
